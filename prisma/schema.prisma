// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "foreignKeys"
}

enum Element {
  NONE
  PYRO
  GEO
  DENDRO
  CRYO
  ELECTRO
  ANEMO
  HYDRO
}

enum WeaponType {
  NONE
  SWORD
  CLAYMORE
  POLEARM
  BOW
  CATALYST
}

enum Affliction {
  PYRO
  CRYO
  ELECTRO
  HYDRO
}

model Player {
  userId BigInt @id
  element Element?
  weaponType WeaponType?
  soloParty Character[]
  soloEncounterStates SoloEncounterState[]
}

model Character {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  isEnemy Boolean
  element Element
  weaponType WeaponType
  maxHP Int
  skills String[]
  defaultAfflictions Affliction[]
  ownerId BigInt?
  owner Player? @relation(fields: [ownerId], references: [userId], onDelete: Cascade)
  encounters Encounter[]
}

model Encounter {
  name String @id
  title String @db.VarChar(255)
  enemies Character[]
  soloStates SoloEncounterState[]
}

model SoloEncounterState {
  id Int @id @default(autoincrement())
  encounterName String
  playerId BigInt
  startedAt DateTime @default(now())
  allyStates Json
  enemyStates Json
  isComplete Boolean
  encounter Encounter @relation(fields: [encounterName], references: [name], onDelete: SetNull)
  player Player @relation(fields: [playerId], references: [userId], onDelete: Cascade)
}
